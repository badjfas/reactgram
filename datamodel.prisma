type User {
  id: ID! @id
  avatar:String
  userName: String! @unique
  email: String! @unique
  firstName: String! @default(value: "")
  lastName: String!
  bio: String
  likes: [Like!]! @relation(name:"LikeOfUser",onDelete:CASCADE)
  posts: [Post!]! @relation(name:"PostOfUser",onDelete:CASCADE)
  comments: [Comment!]! @relation(name:"CommentOfUser",onDelete:CASCADE)
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  rooms: [Room!]!
  loginSecret: String
}


type Post {
  id: ID! @id
  user: User @relation(name:"PostOfUser")
  files: [File!]! @relation(name:"FilesOfPost", onDelete:CASCADE)
  location: String
  caption: String! 
  likes: [Like!]! @relation(name:"LikeOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name:"CommentOfPost", onDelete: CASCADE)
}

type Like {
  id: ID! @id
  user: User @relation(name:"LikeOfUser")
  post: Post @relation(name:"LikeOfPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name:"CommentOfUser")
  post: Post @relation(name:"CommentOfPost")
}



type File {
  id: ID! @id
  Url: String!
  post: Post @relation(name:"FilesOfPost")
}

type Room {
  id: ID! @id
  participants: [User!]!  
  messages: [Message!]!
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: [Room!]!
}